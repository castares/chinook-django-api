# Generated by Django 3.0.3 on 2020-04-26 11:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Albums',
            fields=[
                ('albumid', models.AutoField(db_column='AlbumId', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=160)),
            ],
            options={
                'db_table': 'albums',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('artistid', models.AutoField(db_column='ArtistId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=160, null=True)),
            ],
            options={
                'db_table': 'artists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customerid', models.AutoField(db_column='CustomerId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=160)),
                ('lastname', models.CharField(db_column='LastName', max_length=160)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=160, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=160, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=160, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=160, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=160, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=160, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=160, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=160, null=True)),
                ('email', models.CharField(db_column='Email', max_length=160)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('employeeid', models.AutoField(db_column='EmployeeId', primary_key=True, serialize=False)),
                ('lastname', models.CharField(db_column='LastName', max_length=160)),
                ('firstname', models.CharField(db_column='FirstName', max_length=160)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=160, null=True)),
                ('reportsto', models.IntegerField(blank=True, db_column='ReportsTo', null=True)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('hiredate', models.DateTimeField(blank=True, db_column='HireDate', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=160, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=160, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=160, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=160, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=160, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=160, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=160, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=160, null=True)),
            ],
            options={
                'db_table': 'employees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('genreid', models.AutoField(db_column='GenreId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=160, null=True)),
            ],
            options={
                'db_table': 'genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItems',
            fields=[
                ('invoicelineid', models.AutoField(db_column='InvoiceLineId', primary_key=True, serialize=False)),
                ('trackid', models.IntegerField(db_column='TrackId')),
                ('unitprice', models.CharField(db_column='UnitPrice', max_length=160)),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'invoice_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('invoiceid', models.AutoField(db_column='InvoiceId', primary_key=True, serialize=False)),
                ('invoicedate', models.DateTimeField(db_column='InvoiceDate')),
                ('billingaddress', models.CharField(blank=True, db_column='BillingAddress', max_length=160, null=True)),
                ('billingcity', models.CharField(blank=True, db_column='BillingCity', max_length=160, null=True)),
                ('billingstate', models.CharField(blank=True, db_column='BillingState', max_length=160, null=True)),
                ('billingcountry', models.CharField(blank=True, db_column='BillingCountry', max_length=160, null=True)),
                ('billingpostalcode', models.CharField(blank=True, db_column='BillingPostalCode', max_length=160, null=True)),
                ('total', models.CharField(db_column='Total', max_length=160)),
            ],
            options={
                'db_table': 'invoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MediaTypes',
            fields=[
                ('mediatypeid', models.AutoField(db_column='MediaTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=160, null=True)),
            ],
            options={
                'db_table': 'media_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlists',
            fields=[
                ('playlistid', models.AutoField(db_column='PlaylistId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=160, null=True)),
            ],
            options={
                'db_table': 'playlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'playlist_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracks',
            fields=[
                ('trackid', models.AutoField(db_column='TrackId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=160, null=True)),
                ('composer', models.CharField(blank=True, db_column='Composer', max_length=160, null=True)),
                ('milliseconds', models.IntegerField(db_column='Milliseconds')),
                ('bytes', models.IntegerField(blank=True, db_column='Bytes', null=True)),
                ('unitprice', models.CharField(db_column='UnitPrice', max_length=160)),
            ],
            options={
                'db_table': 'tracks',
                'managed': False,
            },
        ),
    ]
